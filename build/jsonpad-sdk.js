!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).JSONPad={})}(this,(function(t){"use strict";class e{constructor(t){Object.assign(this,{...t,createdAt:new Date(t.createdAt),updatedAt:new Date(t.updatedAt),lastActiveAt:t.lastActiveAt?new Date(t.lastActiveAt):null})}}class i{constructor(t){Object.assign(this,{...t,createdAt:new Date(t.createdAt),updatedAt:new Date(t.updatedAt),user:new e(t.user)})}}class n{constructor(t){this.lastLoginAt=null,Object.assign(this,{...t,createdAt:new Date(t.createdAt),updatedAt:new Date(t.updatedAt),user:new e(t.user),lastLoginAt:t.lastLoginAt?new Date(t.lastLoginAt):null})}}class s{constructor(t){Object.assign(this,{...t,createdAt:new Date(t.createdAt),updatedAt:new Date(t.updatedAt)})}}class a{constructor(t){Object.assign(this,{...t,createdAt:new Date(t.createdAt),updatedAt:new Date(t.updatedAt)})}}class o{constructor(t){Object.assign(this,{...t,createdAt:new Date(t.createdAt),updatedAt:new Date(t.updatedAt),user:new e(t.user)})}}function d(t,...e){return Object.fromEntries(Object.entries(t).filter((([t])=>!e.includes(t))))}const r="x-api-token";async function c(t,e,i,n,s,a,o){const d=n?new URLSearchParams({...Object.fromEntries(Object.entries(n).map((([t,e])=>[t,e.toString()])))}):"",c={[r]:t,"Content-Type":"application/json"};a&&(c["x-identity-group"]=a),o&&(c["x-identity-token"]=o);const h=await fetch(`https://api.jsonpad.io${i}?${d}`,{method:e,headers:c,body:s?JSON.stringify(s):void 0});if(!h.ok)throw new Error(await h.text());return await h.json()}t.Event=i,t.Index=s,t.Item=a,t.List=o,t.User=e,t.default=class{constructor(t){this.token=t}async createList(t){return new o(await c(this.token,"POST","/lists",void 0,t))}async fetchLists(t){return(await c(this.token,"GET","/lists",t)).data.map((t=>new o(t)))}async fetchList(t){return new o(await c(this.token,"GET",`/lists/${t}`))}async searchList(t,e,i){return(await c(this.token,"GET",`/lists/${t}/search`,{query:e,...i})).map((t=>"item"in t?{relevance:t.relevance,item:new a(t.item)}:t))}async fetchListStats(t,e){return await c(this.token,"GET",`/lists/${t}/stats`,e)}async fetchListEvents(t,e){return(await c(this.token,"GET",`/lists/${t}/events`,e)).data.map((t=>new i(t)))}async fetchListEvent(t,e){return new i(await c(this.token,"GET",`/lists/${t}/events/${e}`))}async updateList(t,e){return new o(await c(this.token,"PUT",`/lists/${t}`,void 0,e))}async deleteList(t){await c(this.token,"DELETE",`/lists/${t}`)}async createItem(t,e,i){return new a(await c(this.token,"POST",`/lists/${t}/items`,i,e,this.identityGroup,this.identityToken))}async fetchItems(t,e){return(await c(this.token,"GET",`/lists/${t}/items`,e,void 0,this.identityGroup,this.identityToken)).data.map((t=>new a(t)))}async fetchItemsData(t,e){const i=e.pointer?`/${e.pointer}`:"";return(await c(this.token,"GET",`/lists/${t}/items/data${i}`,d(e,"pointer"),void 0,this.identityGroup,this.identityToken)).data}async fetchItem(t,e,i){return new a(await c(this.token,"GET",`/lists/${t}/items/${e}`,i,void 0,this.identityGroup,this.identityToken))}async fetchItemData(t,e,i){const n=i.pointer?`/${i.pointer}`:"";return await c(this.token,"GET",`/lists/${t}/items/${e}/data${n}`,d(i,"pointer"),void 0,this.identityGroup,this.identityToken)}async fetchItemStats(t,e,i){return await c(this.token,"GET",`/lists/${t}/items/${e}/stats`,i)}async fetchItemEvents(t,e,n){return(await c(this.token,"GET",`/lists/${t}/items/${e}/events`,n)).data.map((t=>new i(t)))}async fetchItemEvent(t,e,n){return new i(await c(this.token,"GET",`/lists/${t}/items/${e}/events/${n}`))}async updateItem(t,e,i){return new a(await c(this.token,"PUT",`/lists/${t}/items/${e}`,void 0,i,this.identityGroup,this.identityToken))}async updateItemData(t,e,i,n){const s=n.pointer?`/${n.pointer}`:"";return new a(await c(this.token,"POST",`/lists/${t}/items/${e}/data${s}`,void 0,i,this.identityGroup,this.identityToken))}async replaceItemData(t,e,i,n){const s=n.pointer?`/${n.pointer}`:"";return new a(await c(this.token,"PUT",`/lists/${t}/items/${e}/data${s}`,void 0,i,this.identityGroup,this.identityToken))}async patchItemData(t,e,i,n){const s=n.pointer?`/${n.pointer}`:"";return new a(await c(this.token,"PATCH",`/lists/${t}/items/${e}/data${s}`,void 0,i,this.identityGroup,this.identityToken))}async deleteItem(t,e){await c(this.token,"DELETE",`/lists/${t}/items/${e}`,void 0,void 0,this.identityGroup,this.identityToken)}async deleteItemData(t,e,i){const n=i.pointer?`/${i.pointer}`:"";return new a(await c(this.token,"DELETE",`/lists/${t}/items/${e}/data${n}`,void 0,void 0,this.identityGroup,this.identityToken))}async createIndex(t,e){return new s(await c(this.token,"POST",`/lists/${t}/indexes`,void 0,e))}async fetchIndexes(t,e){return(await c(this.token,"GET",`/lists/${t}/indexes`,e)).data.map((t=>new s(t)))}async fetchIndex(t,e){return new s(await c(this.token,"GET",`/lists/${t}/indexes/${e}`))}async fetchIndexStats(t,e,i){return await c(this.token,"GET",`/lists/${t}/indexes/${e}/stats`,i)}async fetchIndexEvents(t,e,n){return(await c(this.token,"GET",`/lists/${t}/indexes/${e}/events`,n)).data.map((t=>new i(t)))}async fetchIndexEvent(t,e,n){return new i(await c(this.token,"GET",`/lists/${t}/indexes/${e}/events/${n}`))}async updateIndex(t,e,i){return new s(await c(this.token,"PATCH",`/lists/${t}/indexes/${e}`,void 0,i))}async deleteIndex(t,e){await c(this.token,"DELETE",`/lists/${t}/indexes/${e}`)}async createIdentity(t){return new n(await c(this.token,"POST","/identities",void 0,t))}async fetchIdentities(t){return(await c(this.token,"GET","/identities",t)).data.map((t=>new n(t)))}async fetchIdentity(t){return new n(await c(this.token,"GET",`/identities/${t}`))}async fetchIdentityStats(t,e){return await c(this.token,"GET",`/identities/${t}/stats`,e)}async fetchIdentityEvents(t,e){return(await c(this.token,"GET",`/identities/${t}/events`,e)).data.map((t=>new i(t)))}async fetchIdentityEvent(t,e){return new i(await c(this.token,"GET",`/identities/${t}/events/${e}`))}async updateIdentity(t,e){return new n(await c(this.token,"PUT",`/identities/${t}`,void 0,e))}async deleteIdentity(t){await c(this.token,"DELETE",`/identities/${t}`)}async registerIdentity(t){return new n(await c(this.token,"POST","/identities/register",void 0,t,this.identityGroup,this.identityToken))}async loginIdentity(t){const e=await c(this.token,"POST","/identities/login",void 0,t,this.identityGroup,this.identityToken);return this.identityGroup=e.group||void 0,this.identityToken=e.token||void 0,new n(d(e,"token"))}async logoutIdentity(){await c(this.token,"POST","/identities/logout",void 0,void 0,this.identityGroup,this.identityToken),this.identityGroup=void 0,this.identityToken=void 0}async fetchSelfIdentity(){return new n(await c(this.token,"GET","/identities/self",void 0,void 0,this.identityGroup,this.identityToken))}async updateSelfIdentity(t){return new n(await c(this.token,"PUT","/identities/self",void 0,t,this.identityGroup,this.identityToken))}async deleteSelfIdentity(t){await c(this.token,"DELETE","/identities/self",void 0,void 0,this.identityGroup,this.identityToken)}},Object.defineProperty(t,"__esModule",{value:!0})}));
